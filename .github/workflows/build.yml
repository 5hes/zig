name: build
on:
  push:
concurrency:
  # Cancels pending runs when a PR gets updated.
  group: ${{ github.head_ref || github.run_id }}-${{ github.actor }}
  cancel-in-progress: true

permissions: write-all
jobs:
  creatTag:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Create a new tag
      run: |
        TAG_NAME="master"
        git tag $TAG_NAME
        git push origin $TAG_NAME
  get_Help:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Help
      run: |
        zig build --help
  x1c_Fast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseFast -Dcpu="cortex_x1c" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf x1c_fast.tar master
        tar -cJf x1c_fast.tar.xz master
        7z a x1c_fast.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          x1c_fast.7z
          x1c_fast.tar
          x1c_fast.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: x1c_Fast
        path: ./zig-out/**
        
  x1c_Small:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dcpu="cortex_x1c" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf x1c_small.tar master
        tar -cJf x1c_small.tar.xz master
        7z a x1c_small.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          x1c_small.7z
          x1c_small.tar
          x1c_small.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: x1c_Small
        path: ./zig-out/**

  kryo_Fast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseFast -Dcpu="kryo" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf kryo_fast.tar master
        tar -cJf kryo_fast.tar.xz master
        7z a kryo_fast.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          kryo_fast.7z
          kryo_fast.tar
          kryo_fast.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: kryo_Fast
        path: ./zig-out/**

  kryo_Small:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dcpu="kryo" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf kryo_small.tar master
        tar -cJf kryo_small.tar.xz master
        7z a kryo_small.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          kryo_small.7z
          kryo_small.tar
          kryo_small.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: kryo_Small
        path: ./zig-out/**

  baseline_Fast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseFast -Dcpu="baseline" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf baseline_fast.tar master
        tar -cJf baseline_fast.tar.xz master
        7z a baseline_fast.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          baseline_fast.7z
          baseline_fast.tar
          baseline_fast.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Fast
        path: ./zig-out/**
        
  baseline_Small:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dcpu="baseline" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf baseline_small.tar master
        tar -cJf baseline_small.tar.xz master
        7z a baseline_small.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          baseline_small.7z
          baseline_small.tar
          baseline_small.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Small
        path: ./zig-out/**





  x1c_Fast_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseFast -Dsignle-threaded -Dcpu="cortex_x1c" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf x1c_fast_signle.tar master
        tar -cJf x1c_fast_signle.tar.xz master
        7z a x1c_fast_signle.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          x1c_fast_signle.7z
          x1c_fast_signle.tar
          x1c_fast_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: x1c_Fast_signle
        path: ./zig-out/**
        
  x1c_Small_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dsignle-threaded -Dcpu="cortex_x1c" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf x1c_small_signle.tar master
        tar -cJf x1c_small_signle.tar.xz master
        7z a x1c_small_signle.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          x1c_small_signle.7z
          x1c_small_signle.tar
          x1c_small_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: x1c_Small_signle
        path: ./zig-out/**

  kryo_Fast_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseFast -Dsignle-threaded -Dcpu="kryo" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf kryo_fast_signle.tar master
        tar -cJf kryo_fast_signle.tar.xz master
        7z a kryo_fast_signle.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          kryo_fast_signle.7z
          kryo_fast_signle.tar
          kryo_fast_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: kryo_Fast_signle
        path: ./zig-out/**

  kryo_Small_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dsignle-threaded -Dcpu="kryo" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf kryo_small_signle.tar master
        tar -cJf kryo_small_signle.tar.xz master
        7z a kryo_small_signle.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          kryo_small_signle.7z
          kryo_small_signle.tar
          kryo_small_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: kryo_Fast_signle
        path: ./zig-out/**

  baseline_Fast_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseFast -Dsignle-threaded -Dcpu="baseline" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf baseline_fast_signle.tar master
        tar -cJf baseline_fast_signle.tar.xz master
        7z a baseline_fast_signle.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          baseline_fast_signle.7z
          baseline_fast_signle.tar
          baseline_fast_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Fast_signle
        path: ./zig-out/**
        
  baseline_Small_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz "https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz"
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && export PATH=$PATH:$PWD
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dsignle-threaded -Dcpu="baseline" -Dstrip=true -Dtarget="aarch64-linux-musl"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out master
        tar -cf baseline_small_signle.tar master
        tar -cJf baseline_small_signle.tar.xz master
        7z a baseline_small_signle.7z master
        rm -rf master
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: master
        make_latest: true
        files: |
          baseline_small_signle.7z
          baseline_small_signle.tar
          baseline_small_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Small_signle
        path: ./zig-out/**
