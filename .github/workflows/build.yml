name: build
on:
  push:
concurrency:
  # Cancels pending runs when a PR gets updated.
  group: ${{ github.head_ref || github.run_id }}-${{ github.actor }}
  cancel-in-progress: true

permissions: write-all
env: 
  LINK: 'https://ziglang.org/builds/zig-linux-x86_64-0.14.0-dev.2847+db8ed730e.tar.xz'
jobs:
  creatTag:
    runs-on: ubuntu-latest
    steps:
    - if: env.ENV == 1
      uses: actions/checkout@v4.2.2
    - name: Create a new tag
      if: env.ENV == 1
      run: |
        TAG_NAME="nightly"
        git tag $TAG_NAME
        git push origin $TAG_NAME
  get_Help:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Help
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build --help
  x1c_Fast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseFast -Dcpu="cortex_x1c" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf x1c_fast.tar nightly
        tar -cJf x1c_fast.tar.xz nightly
        7z a x1c_fast.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          x1c_fast.7z
          x1c_fast.tar
          x1c_fast.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: x1c_Fast
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/
        
  x1c_Small:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dcpu="cortex_x1c" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf x1c_small.tar nightly
        tar -cJf x1c_small.tar.xz nightly
        7z a x1c_small.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          x1c_small.7z
          x1c_small.tar
          x1c_small.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: x1c_Small
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/

  kryo_Fast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseFast -Dcpu="kryo" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -Ddev=full -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf kryo_fast.tar nightly
        tar -cJf kryo_fast.tar.xz nightly
        7z a kryo_fast.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          kryo_fast.7z
          kryo_fast.tar
          kryo_fast.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: kryo_Fast
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/

  kryo_Small:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dcpu="kryo" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf kryo_small.tar nightly
        tar -cJf kryo_small.tar.xz nightly
        7z a kryo_small.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          kryo_small.7z
          kryo_small.tar
          kryo_small.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: kryo_Small
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/

  baseline_Fast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseFast -Dcpu="baseline" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf baseline_fast.tar nightly
        tar -cJf baseline_fast.tar.xz nightly
        7z a baseline_fast.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          baseline_fast.7z
          baseline_fast.tar
          baseline_fast.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Fast
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/
        
  baseline_Small:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dcpu="baseline" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf baseline_small.tar nightly
        tar -cJf baseline_small.tar.xz nightly
        7z a baseline_small.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          baseline_small.7z
          baseline_small.tar
          baseline_small.tar.xz 
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Small
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/





  x1c_Fast_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseFast -Dsingle-threaded=true -Dcpu="cortex_x1c" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -Ddev=full -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf x1c_fast_signle.tar nightly
        tar -cJf x1c_fast_signle.tar.xz nightly
        7z a x1c_fast_signle.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          x1c_fast_signle.7z
          x1c_fast_signle.tar
          x1c_fast_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: x1c_Fast_signle
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/
        
  x1c_Small_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dsingle-threaded=true -Dcpu="cortex_x1c" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf x1c_small_signle.tar nightly
        tar -cJf x1c_small_signle.tar.xz nightly
        7z a x1c_small_signle.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          x1c_small_signle.7z
          x1c_small_signle.tar
          x1c_small_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: x1c_Small_signle
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/

  kryo_Fast_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseFast -Dsingle-threaded=true -Dcpu="kryo" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -Ddev=full -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf kryo_fast_signle.tar nightly
        tar -cJf kryo_fast_signle.tar.xz nightly
        7z a kryo_fast_signle.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          kryo_fast_signle.7z
          kryo_fast_signle.tar
          kryo_fast_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: kryo_Fast_signle
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/

  kryo_Small_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dsingle-threaded=true -Dcpu="kryo" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf kryo_small_signle.tar nightly
        tar -cJf kryo_small_signle.tar.xz nightly
        7z a kryo_small_signle.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          kryo_small_signle.7z
          kryo_small_signle.tar
          kryo_small_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: kryo_Small_signle
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/

  baseline_Fast_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseFast -Dsingle-threaded=true -Dcpu="baseline" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf baseline_fast_signle.tar nightly
        tar -cJf baseline_fast_signle.tar.xz nightly
        7z a baseline_fast_signle.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          baseline_fast_signle.7z
          baseline_fast_signle.tar
          baseline_fast_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Fast_signle
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/
        
  baseline_Small_signle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dsingle-threaded=true -Dcpu="baseline" -Dstrip=true -Dtarget="aarch64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf baseline_small_signle.tar nightly
        tar -cJf baseline_small_signle.tar.xz nightly
        7z a baseline_small_signle.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          baseline_small_signle.7z
          baseline_small_signle.tar
          baseline_small_signle.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Small_signle
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/

  x86_64_Small:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseSmall -Dstrip=true -Dtarget="x86_64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf x86_64_small.tar nightly
        tar -cJf x86_64_small.tar.xz nightly
        7z a x86_64_small.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          x86_64_small.7z
          x86_64_small.tar
          x86_64_small.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Small_signle
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/

  x86_64_Fast:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.2
    - name: Setup llvm
      run: |
        curl -o llvm.sh https://apt.llvm.org/llvm.sh
        sudo chmod 777 llvm.sh
        sudo ./llvm.sh 19 all
    - name: Build
      run: |
        mkdir .zig && cd .zig
        curl -o zig.tar.xz $LINK
        tar -xf zig.tar.xz && rm zig.tar.xz
        mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
        cd ../..
        zig build -Doptimize=ReleaseFast -Dstrip=true -Dtarget="x86_64-linux-musl" -Dvalue-interpret-mode=direct -fno-reference-trace -Dvalue-tracing=false --zig-lib-dir "$PWD/.zig/zig/lib" --search-prefix "$PWD/.zig/zig"
    - name: achive
      run: |
        mkdir tmp
        cp -rp zig-out/ tmp/
        cd tmp
        mv zig-out nightly
        tar -cf x86_64_fast.tar nightly
        tar -cJf x86_64_fast.tar.xz nightly
        7z a x86_64_fast.7z nightly
        rm -rf nightly
        mv * ..
    - name: GH Release
      uses: softprops/action-gh-release@v2.2.1
      with:
        tag_name: nightly
        make_latest: true
        files: |
          x86_64_fast.7z
          x86_64_fast.tar
          x86_64_fast.tar.xz
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.0
      with:
        name: baseline_Small_signle
        path: ./zig-out/**
    - name: Check zig binary size
      run: |
        ls -l zig-out/bin/
        ls -lh zig-out/bin/
  
  Test:
    runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4.2.2
      - name: Setup llvm
        run: |
          curl -o llvm.sh https://apt.llvm.org/llvm.sh
          sudo chmod 777 llvm.sh
          sudo ./llvm.sh 19 all
      - name: Build
        run: |
          mkdir .zig && cd .zig
          curl -o zig.tar.xz $LINK
          tar -xf zig.tar.xz && rm zig.tar.xz
          mv * zig && cd zig && mkdir bin && mv zig bin && export PATH=$PATH:$PWD/bin
          cd ../..
          zig build